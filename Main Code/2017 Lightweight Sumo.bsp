' {$STAMP BS2p, Start_Routines.bsp, Search.bsp, Kill.bsp}
' {$PBASIC 2.5}

MotR        CON        8           'Serial out pin for right motor
MotL        CON        9           'Serial out pin for left motor
Bmode       CON        16385       'Constant for 115,200 baud, 8 bit, no parity, inverted
DriveDelay  CON        6           'Delay to scale start routine times

NUMRoutines CON        11

' --------------Variables------------------------
'
Pattern     VAR        Byte        'The Start pattern to be run
SearchBit   VAR        Bit         'Start pattern search bit - 0 if search to the left, 1 if search to the right
SideBit     VAR        Bit         'Side that opponent was last seen on (0 if front, 1 if back
IRoutFront  VAR        Byte        'Front Sensor output to Branch
IRoutBack   VAR        Byte        'Back Sensor output to Branch
irPulse     VAR        Word        'Stores pulse widths
remoteCode  VAR        Byte        'Stores remote code
P7bwrk      VAR        Word        'Workspace for selection pushbuttons (pin 7)
P4bwrk      VAR        Word        'Workspace for selection pushbuttons (pin 6)
Time        VAR        Word        'Button push time accumulator

' --------------Initializations------------------
'
MAINIO
'turn off IR LEDS
LOW 1
LOW 2
LOW 3
LOW 4
LOW 5

LOW 10
LOW 11
LOW 12
LOW 13
LOW 14

AUXIO
INPUT 0
INPUT 1
INPUT 2
INPUT 3
'HIGH 14                            ' uncomment drive high Kill switch button

'initialize variables
IRoutFront = 0
IRoutBack = 0
Pattern = 1
SearchBit=0
SideBit=0

IrDet          PIN     6           ' I/O pin to IR detector output

ThresholdStart CON 2400            ' Binary 1 vs. start pulse
ThresholdPulse CON 500  * 5 / 2    ' Binary 1 vs. 0 for PULSIN

'Check for reset
AUXIO
IF (IN5=0)  THEN  RUN 2
IF (IN6=0)  THEN  RUN 2

'**************************************************************************
'**************************************************************************
'***************Main Program***********************************************

PAUSE 500

Main:

  GOSUB Kill
  GOSUB Sensors
  GOSUB PushButton
  GOSUB Display

  PAUSE 100

GOTO Main

'**************************************************************************
'**************************************************************************
'***************Check IR sensors*******************************************


Sensors:
MAINIO

'Front Plow Sensors
IROutFront = 0

FREQOUT 1, 2, 10407   'Right Front IR sensor
IROutFront.BIT4 = IN6
FREQOUT 2, 2, 10303   'Right Center Front IR sensor
IROutFront.BIT3 = IN6
FREQOUT 3, 2, 10812   'Center Front IR sensor
IROutFront.BIT2 = IN6
FREQOUT 4, 2, 17610   'Left Center Front IR sensor
IROutFront.BIT1 = IN6
FREQOUT 5, 2, 10725   'Left Front IR sensor
IROutFront.BIT0 = IN6

'Back Plow Sensors
IROutBack = 0

FREQOUT 10, 2, 10407   'Right Back IR sensor
IROutBack.BIT4 = IN15
FREQOUT 11, 2, 10303   'Right Center Back IR sensor
IROutBack.BIT3 = IN15
FREQOUT 12, 2, 10812   'Center Back IR sensor
IROutBack.BIT2 = IN15
FREQOUT 13, 2, 17610   'Left Center Back IR sensor
IROutBack.BIT1 = IN15
FREQOUT 14, 2, 10725   'Left Back IR sensor
IROutBack.BIT0 = IN15

RETURN

'**************************************************************************
'**************************************************************************
'***************Check Pushbuttons******************************************


Pushbutton:
'============== Increase + Decrease Buttons ====================
AUXIO
IF IN6=0 THEN
  SearchBit=0         'Set searchbit to left
  PUT 0, Pattern      'store Pattern in scratch RAM at address #0
  PUT 10, SearchBit   'store SearchBit in scratch RAM at address #10
  GOTO IRStart        'Wait to be started by Remote
ENDIF
AUXIO
IF IN5=0 THEN
  SearchBit=1         'Set searchbit to right
  PUT 0, Pattern      'store Pattern in scratch RAM at address #0
  PUT 10, SearchBit   'store SearchBit in scratch RAM at address #10
  GOTO IRStart        'Wait to be started by Remote
ENDIF

'=========== Start Left + Start Right Toggle Buttons ===========

AUXIO
IF IN7=0 THEN
  DO UNTIL IN7=1      'Wait until button is released
    PAUSE 2
  LOOP
  Pattern=Pattern+1   'Increase Routine number
  IF Pattern > NUMRoutines THEN Pattern=1      'Roll over routine number
ENDIF

AUXIO
IF IN4=0 THEN
  DO UNTIL IN4=1      'Wait until button is released
    PAUSE 2
  LOOP
  Pattern=Pattern-1   'Decrease Routine number
  IF Pattern < 1 THEN Pattern=NUMRoutines     'Roll over routine number
ENDIF

RETURN

'**************************************************************************
'**************************************************************************
'***************Update Display*********************************************


Display:
      AUXIO
      IF Pattern=1 THEN
        SEROUT 15,2,[27,115]
        SEROUT 15,2,[27,76,2,0,"SSSBackAForward"]
        SEROUT 15,2,[27,76,7,1,BIN5 IROut]
      ENDIF
      IF Pattern=2 THEN
        SEROUT 15,2,[27,115]
        SEROUT 15,2,[27,76,2,0,"  SSOTurnKill   "]
        SEROUT 15,2,[27,76,7,1,BIN5 IROut]
      ENDIF
      IF Pattern=3 THEN
        SEROUT 15,2,[27,115]
        SEROUT 15,2,[27,76,2,0,"SSOForwardSearch"]
        SEROUT 15,2,[27,76,7,1,BIN5 IROut]
      ENDIF
      IF Pattern=4 THEN
        SEROUT 15,2,[27,115]
        SEROUT 15,2,[27,76,2,0,"    FFCharge    "]
        SEROUT 15,2,[27,76,7,1,BIN5 IRout]
      ENDIF
      IF Pattern=5 THEN
        SEROUT 15,2,[27,115]
        SEROUT 15,2,[27,76,2,0," BBOutLoopBack  "]
        SEROUT 15,2,[27,76,7,1,BIN5 IRout]
      ENDIF
      IF Pattern=6 THEN
        SEROUT 15,2,[27,115]
        SEROUT 15,2,[27,76,2,0,"   FFTurnSide   "]
        SEROUT 15,2,[27,76,7,1,BIN5 IRout]
      ENDIF
      IF Pattern=7 THEN
        SEROUT 15,2,[27,115]
        SEROUT 15,2,[27,76,2,0," FFBack45Charge "]
        SEROUT 15,2,[27,76,7,1,BIN5 IRout]
      ENDIF
      IF Pattern=8 THEN
        SEROUT 15,2,[27,115]
        SEROUT 15,2,[27,76,2,0,"  BB180Charge   "]
        SEROUT 15,2,[27,76,7,1,BIN5 IRout]
      ENDIF
      IF Pattern=9 THEN
        SEROUT 15,2,[27,115]
        SEROUT 15,2,[27,76,2,0," BB270Loopkill  "]
        SEROUT 15,2,[27,76,7,1,BIN5 IRout]
      ENDIF
      IF Pattern=10 THEN
        SEROUT 15,2,[27,115]
        SEROUT 15,2,[27,76,2,0,"  SSSTurnKill   "]
        SEROUT 15,2,[27,76,7,1,BIN5 IRout]
      ENDIF
RETURN

'**************************************************************************
'**************************************************************************
'***************Check Kill Switch******************************************

Kill:
       AUXIO
       IF (IN0 = 1) THEN GOTO Redlight
       IF (IN1 = 1) THEN GOTO Redlight
       IF (IN2 = 1) THEN GOTO Redlight
       IF (IN3 = 1) THEN GOTO Redlight


       IF IN14 = 0 THEN
        PAUSE 20
        IF IN14 = 0 THEN
          GOTO Redlight
        ENDIF
       ENDIF

       RETURN

Redlight:
          MAINIO
          SEROUT MotR, Bmode, ["!G ",SDEC ((0)<<3),CR]
          SEROUT MotL, Bmode, ["!G ",SDEC ((0)<<3),CR]

          AUXIO
          SEROUT 15,2,[27,115]
          SEROUT 15,2,[27,76,5,0,"DEAD DEAD"]
          SEROUT 15,2,[27,76,7,1,BIN5 IRout]
          LOW 14
          PAUSE 100
          GOTO redlight



'**************************************************************************
'**************************************************************************
'***************IR Start***************************************************

IRStart:
AUXIO
SEROUT 15,2,[27,115]
SEROUT 15,2,[27,76,4,0,"  IR Start  "]
SEROUT 15,2,[27,76,7,1,BIN5 IROut]


DO                                           ' Main DO...LOOP

  GOSUB Get_Ir_Remote_Code                   ' Call remote code subroutine
  SELECT remoteCode                          ' Select message to display
    CASE 0 TO 9
      RUN 1                                  ' Begin the Start Routine (Start_Routines.bsp)
    ENDSELECT

LOOP                                         ' Repeat main DO...LOOP


Get_Ir_Remote_Code:
  MAINIO
  remoteCode = 0
      DO                                     ' Wait for start pulse.
        PULSIN IrDet, 0, irPulse
      LOOP UNTIL irPulse > ThresholdStart
      PULSIN IrDet, 0, irPulse               ' Get data pulses.
      IF irPulse > ThresholdPulse THEN remoteCode.BIT0 = 1
      PULSIN IrDet, 0, irPulse
      IF irPulse > ThresholdPulse THEN remoteCode.BIT1 = 1
      PULSIN IrDet, 0, irPulse
      IF irPulse > ThresholdPulse THEN remoteCode.BIT2 = 1
      PULSIN IrDet, 0, irPulse
      IF irPulse > ThresholdPulse THEN remoteCode.BIT3 = 1
      PULSIN IrDet, 0, irPulse
      IF irPulse > ThresholdPulse THEN remoteCode.BIT4 = 1
      PULSIN IrDet, 0, irPulse
      IF irPulse > ThresholdPulse THEN remoteCode.BIT5 = 1
      PULSIN IrDet, 0, irPulse
      IF irPulse > ThresholdPulse THEN remoteCode.BIT6 = 1
  ' Map digit keys to actual values.
  IF (remoteCode < 10) THEN remoteCode = remoteCode + 1
  IF (remoteCode = 10) THEN remoteCode = 0
  RETURN