' {$STAMP BS2p}
' {$PBASIC 2.5}

MotR        CON        8           'Serial out pin for right motor
MotL        CON        9           'Serial out pin for left motor
Bmode       CON        16385       'Constant for 115,200 baud, 8 bit, no parity, inverted
DriveDelay  CON        6           'Delay to scale start routine times

' --------------Variables------------------------
'
Pattern     VAR        Byte        'The Start pattern to be run
SearchBit   VAR        Bit         'Start pattern search bit - 0 if search to the left, 1 if search to the right
SideBit     VAR        Bit         'Side that opponent was last seen on (0 if front, 1 if back
IRoutFront  VAR        Byte        'Front Sensor output to Branch
IRoutBack   VAR        Byte        'Back Sensor output to Branch
NewSpdRt    VAR        Byte        'Right motor speed 0 is full reverse, 255 is full forward, 127 and 128 are off
NewSpdLeft  VAR        Byte        'Left motor speed 0 is full reverse, 255 is full forward, 127 and 128 are off
Delay       VAR        Byte        'Counter
C            VAR       Byte        'Counter
RtHit        VAR       Word
LtHit        VAR       Word
NoHit        VAR       Word
OtherHit     VAR       Word


' --------------Initializations------------------
'
MAINIO
LOW 1
LOW 2
LOW 3
LOW 4
LOW 5

AUXIO
INPUT 0
INPUT 1
INPUT 2
INPUT 3

NewSpdRt = 127
NewSpdLeft = 127
Pattern = 0
Delay = 0
IRoutFront = 0
IRoutBack = 0
C = 0
RtHit = 0
LtHit = 0
NoHit = 0
OtherHit = 0


'**************************************************************************
'**************************************************************************
'**************************************************************************
'***************Main Program***********************************************


Main:
GOSUB Sensors
GOSUB Branching
GOSUB Drive
GOSUB Kill
PAUSE 10
GOTO Main


'**************************************************************************
'**************************************************************************
'*********Motor Control****************************************************

Drive:
PAUSE DriveDelay

MAINIO
SEROUT MotR, Bmode, ["!G ",SDEC ((NewSpdRt-127)<<3),CR]
SEROUT MotL, Bmode, ["!G ",SDEC ((127-NewSpdLeft)<<3),CR]

RETURN



'**************************************************************************
'**************************************************************************
'*************Check Sensors************************************************

Sensors:
MAINIO

'Front Plow Sensors
IROutFront = 0

FREQOUT 1, 2, 10407   'Right Front IR sensor
IROutFront.BIT4 = IN6
FREQOUT 2, 2, 10303   'Right Center Front IR sensor
IROutFront.BIT3 = IN6
FREQOUT 3, 2, 10812   'Center Front IR sensor
IROutFront.BIT2 = IN6
FREQOUT 4, 2, 17610   'Left Center Front IR sensor
IROutFront.BIT1 = IN6
FREQOUT 5, 2, 10725   'Left Front IR sensor
IROutFront.BIT0 = IN6

'Back Plow Sensors
IROutBack = 0

FREQOUT 10, 2, 10407   'Right Back IR sensor
IROutBack.BIT4 = IN15
FREQOUT 11, 2, 10303   'Right Center Back IR sensor
IROutBack.BIT3 = IN15
FREQOUT 12, 2, 10812   'Center Back IR sensor
IROutBack.BIT2 = IN15
FREQOUT 13, 2, 17610   'Left Center Back IR sensor
IROutBack.BIT1 = IN15
FREQOUT 14, 2, 10725   'Left Back IR sensor
IROutBack.BIT0 = IN15

RETURN


'**************************************************************************
'**************************************************************************
'***************Branching**************************************************


Branching:

IF IRout = 31 THEN C = C + 1 ELSE C = 0

IF C > 20 THEN
SearchBit = ~SearchBit
RUN 2
ENDIF

'Test**********************************************************************
'Test**********************************************************************
OtherHit = 0: LtHit = 0: RtHit = 0: NoHit = 0'                          **
'IRout = 0              'Use for testing motor constants                 **
                        '0  for Straight                                 **
                        '12 for Hard Right                               **
                        '5  for Hard Left                                **
                        '8  for Std Right                                **
                        '2  for Std Left                                 **
                        '9  for Easy Right                               **
                        '18  for Easy Left                               **
                        '26 for Search Right                             **
                        '11 for Search Left                              **
                        '10 for Search                                   **
'Test**********************************************************************
'Test**********************************************************************

GOTO BranchAgain


BRANCH IRout, [Other, Other, Other, Other, Other, Other, Other, LeftHit, Other, Other, Other, Other, Other, Other, Other, LeftHit, Other, Other, Other, Other, Other, Other, Other, LeftHit, Other, Other, Other, Other, RightHit, RightHit, RightHit, NotaHit]
'0 = hit       00000  00001  00010  00011  00100  00101  00110  00111    01000  01001  01010  01011  01100  01101  01110  01111    10000  10001  10010  10011  10100  10101  10110  10111    11000  11001  11010  11011  11100     11101     11110     11111

Other:
OtherHit = OtherHit + 1
IF OtherHIT < 4 THEN BranchAgain
OtherHit = 0: LtHit = 0: RtHit = 0: NoHit = 0
GOTO BranchAgain

LeftHit:
LtHit = LtHit + 1
IF LtHIT < 2 THEN BranchAgain
OtherHit = 0: RtHit = 0: NoHit = 0
IF LtHIT < 200 THEN BranchAgain    '45 is about six to seven seconds
FOR Delay = 1 TO 5
NewSpdLeft = 0                     'Drive backwards for about eight
NewSpdRt = 95                      'inches as the controller changes speeds
LtHit = 25                         'If no change, do again in two seconds
GOSUB Drive
NEXT
RETURN                             'Return to main program

RightHit:
RtHit = RtHit + 1
IF RtHIT < 2 THEN BranchAgain
OtherHit = 0: LtHit = 0: NoHit = 0
IF RtHIT < 200 THEN BranchAgain    '45 is about six to seven seconds
FOR Delay = 1 TO 5
NewSpdLeft = 95                    'Drive backwards for about eight
NewSpdRt = 0                       'inches as the controller changes speed
RtHit = 25
GOSUB Drive
NEXT
RETURN                             'Return to main program


NotaHit:
NoHit = NoHit + 1
IF NoHIT < 2 THEN BranchAgain
OtherHit = 0: LtHit = 0: RtHit = 0
IF NoHiT < 300 THEN BranchAgain    '100 is about eleven seconds
NoHit = 0                          'Zero out counter
FOR Delay = 1 TO 5
NewSpdLeft = 0                     'Drive backwards for about
NewSpdRt = 0                       'a foot as the controller
GOSUB Drive                        'changes speeds
NEXT                               'Pause 1 sec for a total of 3 1/2 feet backwards
RETURN                             'Return to main program

BranchAgain:
BRANCH IRout, [Straight,EasyLeft,Left, Left, Straight,HardLeft,HardLeft,HardLeft,Right,EasyRight,Search,SearchLeft,HardRight,Search,Search,SearchLeft,EasyRight,Straight,EasyLeft,EasyLeft,HardRight,Search,Search,Left, Right,EasyRight,SearchRight,StraightR,HardRight,Right,SearchRight,Search]
'0 = hit       00000    00001    00010 00011 00100    00101    00110    00111    01000 01001     01010  01011      01100     01101  01110  01111      10000     10001    10010    10011    10100     10101  10110  10111 11000 11001     11010       11011     11100     11101 11110       11111

StraightR:        '****************Straight, change search direction
SearchBit = SearchBit ^ 1
GOTO Straight


SearchRight:      '****************Search to right
SearchBit = 1
GOTO Search


SearchLeft:       '****************Search to left
SearchBit = 0
GOTO Search


Search:           '****************Search to right if SearchBit = 1, Search to left if SearchBit = 0
NewSpdLeft  = 0+(SearchBit*95)
NewSpdRt = 95-(SearchBit*95)
RETURN


Straight:         '****************Straight****************
NewSpdLeft = 255
NewSpdRt = 255
RETURN


HardRight:        '****************Hard right****************
SearchBit = 1
NewSpdLeft  = 255
NewSpdRt = 100
RETURN


HardLeft:         '****************Hard left****************
SearchBit = 0
NewSpdLeft  = 100
NewSpdRt = 255
RETURN


Right:            '****************Right****************
SearchBit = 1
NewSpdLeft  = 255
NewSpdRt = 127
RETURN


Left:             '****************Left****************
SearchBit = 0
NewSpdLeft  = 127
NewSpdRt = 255
RETURN


EasyRight:        '****************Easy right****************
SearchBit = 1
NewSpdLeft  = 255
NewSpdRt = 160
RETURN


EasyLeft:         '****************Easy left****************
SearchBit = 0
NewSpdLeft  = 160
NewSpdRt = 255
RETURN



'**************************************************************
'*****************************Kill*****************************
'**************************************************************

Kill:
       AUXIO
       IF (IN0 = 1) THEN GOTO Redlight
       IF (IN1 = 1) THEN GOTO Redlight
       IF (IN2 = 1) THEN GOTO Redlight
       IF (IN3 = 1) THEN GOTO Redlight


       IF (IN14 = 0) THEN
        PAUSE 20
        IF (IN14 = 0) THEN
          GOTO Redlight
        ENDIF
       ENDIF

       RETURN

Redlight:
          MAINIO
          SEROUT MotR, Bmode, ["!G ",SDEC ((0)<<3),CR]
          SEROUT MotL, Bmode, ["!G ",SDEC ((0)<<3),CR]

          AUXIO
          SEROUT 15,2,[27,115]
          SEROUT 15,2,[27,76,5,0,"DEAD DEAD"]
          SEROUT 15,2,[27,76,7,1,BIN5 IROutFront]
          SEROUT 15,2,[27,76,7,2,BIN5 IROutFront]
          LOW 14
          PAUSE 100
          GOTO redlight