' {$STAMP BS2p}
' {$PBASIC 2.5}

MotR        CON        8           'Serial out pin for right motor
MotL        CON        9           'Serial out pin for left motor
Bmode       CON        16385       'Constant for 115,200 baud, 8 bit, no parity, inverted
DriveDelay  CON        6           'Delay to scale start routine times

' --------------Variables------------------------
'
Pattern     VAR        Byte        'The Start pattern to be run
SearchBit   VAR        Bit         'Start pattern search bit - 0 if search to the left, 1 if search to the right
SideBit     VAR        Bit         'Side that opponent was last seen on (0 if front, 1 if back
IRoutFront  VAR        Byte        'Front Sensor output to Branch
IRoutBack   VAR        Byte        'Back Sensor output to Branch
NewSpdRt    VAR        Byte        'Right motor speed 0 is full reverse, 255 is full forward, 127 and 128 are off
NewSpdLeft  VAR        Byte        'Left motor speed 0 is full reverse, 255 is full forward, 127 and 128 are off
Delay       VAR        Byte        'Counter


' --------------Initializations------------------
'
MAINIO
'turn off IR LEDS
LOW 1
LOW 2
LOW 3
LOW 4
LOW 5

LOW 10
LOW 11
LOW 12
LOW 13
LOW 14

AUXIO
INPUT 0
INPUT 1
INPUT 2
INPUT 3

'initialize variables
NewSpdRt = 0
NewSpdLeft = 0
Pattern = 0
Delay = 0
IRoutFront = 0
IRoutBack = 0
SearchBit = 0
SideBit = 0


'**************************************************************************
'**************************************************************************
'**************************************************************************
'***************Main Program***********************************************

GET 0, Pattern                    'Retrieve the existing start routine from Scratch RAM
GET 10, SearchBit                 'Retrieve the existing search bit from Scratch RAM
IF Pattern = 0 THEN RUN 2         'If there is nothing in Scratch Ram, then go into Search + Kill

BRANCH Pattern, [BackAttack, BackAttack, TurnKill, ForwardSearch, Charge, OutAndBack, Head2Head, Side45, Back180, BackLoop,SideLoop]

'Situations 1, 2: Side-by-side, facing same direction, 1ft apart / touching
BackAttack:
  FOR Delay = 1 TO 12              'Quick backup with slight turn
    NewSpdRt = 127 - (SearchBit*127)
    NewSpdLeft = 0 + (SearchBit*127)
    GOSUB Drive
  NEXT

  FOR Delay = 1 TO 20              'Charge back
    NewSpdRt = 0
    NewSpdLeft = 0
    GOSUB Drive
    GOSUB Sensors
  NEXT

  FOR Delay = 1 TO 30              'Charge forward
    NewSpdRt = 255
    NewSpdLeft = 255
    GOSUB Drive
    GOSUB Sensors
  NEXT

  RUN 2                            'Search Mode

'Situation 3: Side-by-side, facing opposite directions, 1ft apart
TurnKill:
  FOR Delay = 1 TO 11              'Immediate 90 deg turn
    NewSpdRt = 255 - (SearchBit*255)     'Right should equal 15
    NewSpdLeft = 0 + (SearchBit*255)    'right should equal 230
    GOSUB Drive
    GOSUB Sensors
  NEXT
  RUN 2                            'Search Mode

'Situation 4: Side-by-side, facing opposite directions, touching
ForwardSearch:
  FOR Delay = 1 TO 22              'Forward 2ft
    NewSpdRt = 240
    NewSpdLeft = 240
    GOSUB Drive
  NEXT
  RUN 2                            'Search Mode

'Situation 5, 6: Front-to-front, 1ft apart / touching
Charge:
  FOR Delay = 1 TO 20
    NewSpdRt = 255
    NewSpdLeft = 255
    GOSUB Drive
    GOSUB Sensors
  NEXT
  RUN 2

'Situation 7, 8: Back-to-back, 1ft apart / touching
OutAndBack:
  'go forward
  FOR Delay = 1 TO 13
    NewSpdRt = 255
    NewSpdLeft = 255
    GOSUB Drive
  NEXT
  'turn 180
  FOR Delay = 1 TO 18
    NewSpdLeft = 0 + (SearchBit*255)
    NewSpdRt = 255 - (SearchBit*255)
    GOSUB Drive
    GOSUB Sensors
  NEXT


  'go forward
  FOR Delay = 1 TO 20
    NewSpdRt = 255
    NewSpdLeft = 255
    GOSUB Drive
    GOSUB Sensors
  NEXT
  RUN 2

'Situation 9: Front-to-front, 1ft apart / touching
Head2Head:
  FOR Delay = 1 TO 4              'Immediate 90 deg turn to the left
    NewSpdRt = 240 - (SearchBit*225)
    NewSpdLeft = 15 + (SearchBit*225)
    GOSUB Drive
  NEXT

  FOR Delay = 1 TO 14              'Backward 2ft
    NewSpdRt = 15
    NewSpdLeft = 15
    GOSUB Drive
  NEXT

  SearchBit = SearchBit ^ 1 'we want it here for now
  RUN 2

'Situation 10: Front-to-front, 1ft apart / touching

Side45:
  FOR Delay = 1 TO 22              '45 deg back
    NewSpdLeft = 0 + (SearchBit*100)   'lower to 80-90
    NewSpdRt = 100 - (SearchBit*100)
    GOSUB Drive
  NEXT

  FOR Delay = 1 TO 23              'go forward
    NewSpdRt = 255
    NewSpdLeft = 255
    GOSUB Drive
    GOSUB Sensors
  NEXT

  SearchBit = SearchBit ^ 1
  RUN 2

'Situation 11: Back-to-Back, 1ft apart / touching

Back180:
  FOR Delay = 1 TO (10 + (SearchBit*5))              '180 deg turn in place
    NewSpdLeft = 0 + (SearchBit*255)
    NewSpdRt = 255 - (SearchBit*255)
    GOSUB Drive
  NEXT

  FOR Delay = 1 TO 19              'go forward
    NewSpdRt = 255
    NewSpdLeft = 255
    GOSUB Drive
    GOSUB Sensors
  NEXT

  RUN 2

'Situation 12: Back-to-Back, 1ft apart / touching

BackLoop:                            'loops 90 degrees to the left
  FOR Delay = 1 TO 60
    NewSpdRt = 255 - (SearchBit*110)
    NewSpdLeft = 145 + (SearchBit*110)
    GOSUB Drive
    GOSUB Sensors
  NEXT
  FOR Delay = 1 TO 8
    NewSpdRt = 255
    NewSpdLeft = 255
    GOSUB Drive
    GOSUB Sensors
  NEXT

  RUN 2


'Situations 13: Side-by-side, facing same direction, 1ft apart / touching
SideLoop:
  FOR Delay = 1 TO 11              'Immediate 90 deg turn
    NewSpdRt = 255 - (SearchBit*255)     'Right should equal 15
    NewSpdLeft = 0 + (SearchBit*255)    'right should equal 230
    GOSUB Drive
    GOSUB Sensors
  NEXT

  RUN 2                            'Search Mode


'**************************************************************************
'**************************************************************************
'*********Motor Control****************************************************


Drive:
GOSUB Kill

PAUSE DriveDelay

MAINIO
SEROUT MotR, Bmode, ["!G ",SDEC ((NewSpdRt-127)<<3),CR]
SEROUT MotL, Bmode, ["!G ",SDEC ((127-NewSpdLeft)<<3),CR]

RETURN


'**************************************************************************
'**************************************************************************
'*************Check Sensors************************************************

Sensors:
MAINIO

'Front Plow Sensors
IROutFront = 0

FREQOUT 1, 2, 10407   'Right Front IR sensor
IROutFront.BIT4 = IN6
FREQOUT 2, 2, 10303   'Right Center Front IR sensor
IROutFront.BIT3 = IN6
FREQOUT 3, 2, 10812   'Center Front IR sensor
IROutFront.BIT2 = IN6
FREQOUT 4, 2, 17610   'Left Center Front IR sensor
IROutFront.BIT1 = IN6
FREQOUT 5, 2, 10725   'Left Front IR sensor
IROutFront.BIT0 = IN6

'Back Plow Sensors
IROutBack = 0

FREQOUT 10, 2, 10407   'Right Back IR sensor
IROutBack.BIT4 = IN15
FREQOUT 11, 2, 10303   'Right Center Back IR sensor
IROutBack.BIT3 = IN15
FREQOUT 12, 2, 10812   'Center Back IR sensor
IROutBack.BIT2 = IN15
FREQOUT 13, 2, 17610   'Left Center Back IR sensor
IROutBack.BIT1 = IN15
FREQOUT 14, 2, 10725   'Left Back IR sensor
IROutBack.BIT0 = IN15

'Uncomment for debugging purposes, will blind the sensors
'IRoutFront = 31
'IRoutBack = 31

'Check for sensor hits on three center front sensors
IF (IRoutFront.BIT1 = 0) OR (IRoutFront.BIT2 = 0) OR (IRoutFront.BIT3 = 0) THEN
 SideBit=0
 RUN 2
ENDIF

'Check for sensor hits on three center back sensors
IF (IRoutBack.BIT1 = 0) OR (IRoutBack.BIT2 = 0) OR (IRoutBack.BIT3 = 0) THEN
 SideBit=1
 RUN 2
ENDIF

RETURN


'**************************************************************
'*****************************Kill*****************************
'**************************************************************

Kill:
       AUXIO
       IF (IN0 = 1) THEN GOTO Redlight
       IF (IN1 = 1) THEN GOTO Redlight
       IF (IN2 = 1) THEN GOTO Redlight
       IF (IN3 = 1) THEN GOTO Redlight


       IF (IN14 = 0) THEN
        PAUSE 20
        IF (IN14 = 0) THEN
          GOTO Redlight
        ENDIF
       ENDIF

       RETURN

Redlight:
          MAINIO
          SEROUT MotR, Bmode, ["!G ",SDEC ((0)<<3),CR]
          SEROUT MotL, Bmode, ["!G ",SDEC ((0)<<3),CR]

          AUXIO
          SEROUT 15,2,[27,115]
          SEROUT 15,2,[27,76,5,0,"DEAD DEAD"]
          SEROUT 15,2,[27,76,7,1,BIN5 IROutFront]
          SEROUT 15,2,[27,76,7,2,BIN5 IROutFront]
          LOW 14
          PAUSE 100
          GOTO redlight