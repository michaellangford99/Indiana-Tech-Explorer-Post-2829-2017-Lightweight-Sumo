'{$STAMP BS2p}
'{$PBASIC 2.5}

MotR        CON        8           'Serial out pin for right motor
MotL        CON        9           'Serial out pin for left motor
Bmode       CON        16385       'Constant for 115,200 baud, 8 bit, no parity, inverted
DriveDelay  CON        6           'Delay to scale start routine times

' --------------Variables------------------------
'
Pattern      VAR       Byte        'The Start pattern to be run
SearchBit    VAR       Bit         'Start pattern search bit - 0 if search to the left, 1 if search to the right
IRout        VAR       Byte        'Sensor output to Branch
NewSpdRt     VAR       Byte        'Right motor speed 0 is full reverse, 255 is full forward, 127 and 128 are off
NewSpdLeft   VAR       Byte        'Left motor speed 0 is full reverse, 255 is full forward, 127 and 128 are off
Delay        VAR       Byte        'Counter

' --------------Initializations------------------
'
MAINIO
LOW 1
LOW 2
LOW 3
LOW 4
LOW 5

AUXIO
INPUT 0
INPUT 1
INPUT 2
INPUT 3

NewSpdRt = 127
NewSpdLeft = 127
Pattern = 0
Delay = 0
IRout = 0

'**************************************************************************
'**************************************************************************
'**************************************************************************
'***************Main Program***********************************************


Main:
GOSUB Sensors
GOSUB Branching
GOSUB Drive
GOSUB Kill
PAUSE 10
GOTO Main


'**************************************************************************
'**************************************************************************
'*********Motor Control****************************************************

Drive:
PAUSE DriveDelay

MAINIO
SEROUT MotR, Bmode, ["!G ",SDEC ((NewSpdRt-127)<<3),CR]
SEROUT MotL, Bmode, ["!G ",SDEC ((127-NewSpdLeft)<<3),CR]

RETURN




'**************************************************************************
'**************************************************************************
'***************Check IR sensors*******************************************


Sensors:
MAINIO
IROut = 0

FREQOUT 1, 2, 10407   'Right IR sensor
IROUT.BIT4 = IN6

FREQOUT 2, 2, 10303   'Right Center IR sensor
IROUT.BIT3 = IN6

FREQOUT 3, 2, 10812   'Center IR sensor
IROUT.BIT2 = IN6

FREQOUT 4, 2, 17610   'Left Center IR sensor
IROUT.BIT1 = IN6

FREQOUT 5, 2, 10725   'Left IR sensor
IROUT.BIT0 = IN6

'Uncomment for debugging purposes
'IRout = 31

RETURN


'**************************************************************************
'**************************************************************************
'***************Branching**************************************************


Branching:  
BRANCH IRout, [Straight,EasyLeft,Left, Left, Straight,HardLeft,HardLeft,HardLeft,Right,EasyRight,Search,SearchLeft,HardRight,Search,Search,SlowLeft,EasyRight,Straight,EasyLeft,EasyLeft,HardRight,Search,Search,Left, Right,EasyRight,SearchRight,StraightR,HardRight,Right,SlowRight,Search]
'0 = hit       00000    00001    00010 00011 00100    00101    00110    00111    01000 01001     01010  01011      01100     01101  01110  01111      10000     10001    10010    10011    10100     10101  10110  10111 11000 11001     11010       11011     11100     11101 11110       11111

StraightR:        '****************Straight, change search direction
SearchBit = SearchBit ^ 1
GOTO Straight


SearchRight:      '****************Search to right
SearchBit = 1
GOTO Search


SearchLeft:       '****************Search to left
SearchBit = 0
GOTO Search


Search:           '****************Search to right if SearchBit = 1, Search to left if SearchBit = 0
NewSpdLeft  = 150+(SearchBit*50)
NewSpdRt = 200-(SearchBit*50)
RETURN


Straight:         '****************Straight****************
NewSpdLeft = 255
NewSpdRt = 255
RETURN


HardRight:        '****************Hard right****************
SearchBit = 1
NewSpdLeft  = 255
NewSpdRt = 135
RETURN


HardLeft:         '****************Hard left****************
SearchBit = 0
NewSpdLeft  = 135
NewSpdRt = 255
RETURN


Right:            '****************Right****************
SearchBit = 1
NewSpdLeft  = 255
NewSpdRt = 160
RETURN


Left:             '****************Left****************
SearchBit = 0
NewSpdLeft  = 160
NewSpdRt = 255
RETURN


EasyRight:        '****************Easy right****************
SearchBit = 1
NewSpdLeft  = 255
NewSpdRt = 185
RETURN


EasyLeft:         '****************Easy left****************
SearchBit = 0
NewSpdLeft  = 185
NewSpdRt = 255
RETURN


SlowRight:        '****************Slow right****************
SearchBit = 1
NewSpdLeft  = 255
NewSpdRt = 100
RETURN


SlowLeft:         '****************Slow left****************
SearchBit = 0
NewSpdLeft  = 100
NewSpdRt = 255
RETURN



'**********************************************************
'********Kill**********************************************
'**********************************************************

Kill:
       AUXIO
       IF (IN0 = 1) THEN GOTO Redlight
       IF (IN1 = 1) THEN GOTO Redlight
       IF (IN2 = 1) THEN GOTO Redlight
       IF (IN3 = 1) THEN GOTO Redlight

       IF IN14 = 0 THEN
        PAUSE 20
        IF IN14 = 0 THEN
          GOTO Redlight
        ENDIF
       ENDIF

       RETURN

Redlight:
          MAINIO
          SEROUT MotR, Bmode, ["!G ",SDEC ((0)<<3),CR]
          SEROUT MotL, Bmode, ["!G ",SDEC ((0)<<3),CR]

          AUXIO
          SEROUT 15,2,[27,115]
          SEROUT 15,2,[27,76,5,0,"DEAD DEAD"]
          SEROUT 15,2,[27,76,7,1,BIN5 IRout]
          LOW 14
          PAUSE 100
          GOTO redlight